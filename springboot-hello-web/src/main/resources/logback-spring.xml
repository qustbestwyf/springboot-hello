<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE RelativeLayou>

<!-- 从高到低：OFF，FATAL，ERROR，WARN，INFO，DEBUG，TRACE，ALL -->
<!-- 日志输出规则：输出比当前ROOT级别高的日志，另外亦可考虑filter级别过滤器 -->

<!-- scan=true，一旦配置文件发生改变，将会被重新加载，默认为true； scanPeriod，监测配置文件是否有修改的时间间隔，默认单位是毫秒，scan为true才生效，默认的时间间隔为1分钟； 
	debug=true，打印logback内部日志信息，实时查看logback运行状态，默认为false； -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<property resource="system.properties" />
	<!-- 定义日志文件位置 -->
	<property name="logDir" value="/logs/yifengtec/hello/web" />
	<!-- 日志最大历史30天 -->
	<property name="maxHistory" value="30" />

	<!-- 控制台输出日志 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 对日志进行格式化 -->
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger - %msg%n</pattern>
		</layout>
	</appender>

	<appender name="DEBUG_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${logDir}/debug-%d{yyyy-MM-dd}.log</FileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger - %msg%n</pattern>
		</layout>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>  <!-- 只打印Debug日志 -->
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="INFO_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${logDir}/info-%d{yyyy-MM-dd}.log</FileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger - %msg%n</pattern>
		</layout>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>  <!-- 只打印Info日志 -->
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="INFO_JMS"
		class="org.springframework.amqp.rabbit.logback.AmqpAppender">
		<host>47.89.241.126</host>
		<applicationId>hello-web</applicationId>
		<port>5672</port>
		<username>smallrabbit</username>
		<password>123456</password>
		<routingKeyPattern>logback</routingKeyPattern>
		<declareExchange>true</declareExchange>
		<generateId>true</generateId>
		<charset>UTF-8</charset>
		<durable>true</durable>
		<deliveryMode>PERSISTENT</deliveryMode>
		<layout>
			<pattern><![CDATA[ %X{ip} %d %p %t [%c] - <%m>%n ]]></pattern>
		</layout>
	</appender>

	<appender name="logstash"
		class="net.logstash.logback.appender.LogstashTcpSocketAppender">
		<remoteHost>${logstash-host}</remoteHost>
		<port>${logstash-port}</port>
		<!-- encoder is required -->
		<encoder charset="UTF-8"
			class="net.logstash.logback.encoder.LogstashEncoder">
			<customFields>{"logenv":"${logenv}","appname":"${appname}"}</customFields>
		</encoder>
	</appender>

	<appender name="WARN_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${logDir}/warn-%d{yyyy-MM-dd}.log</FileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger - %msg%n</pattern>
		</layout>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>  <!-- 只打印Warn日志 -->
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${logDir}/error-%d{yyyy-MM-dd}.log</FileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger - %msg%n</pattern>
		</layout>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>  <!-- 只打印Error日志 -->
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 异步输出INFO日志 -->
	<appender name="INFO_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->

		<appender-ref ref="logstash" />
		<!-- <springProfile name="!product"> <appender-ref ref="INFO_FILE" /> </springProfile> 
			<springProfile name="product"> <appender-ref ref="INFO_JMS" /> </springProfile> -->
	</appender>

	<!-- 异步输出WARN日志 -->
	<appender name="WARN_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="WARN_FILE" />
	</appender>

	<!-- 异步输出ERROR日志 -->
	<appender name="ERROR_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="ERROR_FILE" />
	</appender>

	<!-- package log level configure -->
	<logger name="org.springframework" level="WARN" />
	<logger name="org.springframework.boot.autoconfigure.security"
		level="INFO"></logger>
	<logger name="org.apache.ibatis" level="WARN" />
	<logger name="org.mybatis.spring" level="WARN" />
	<logger name="java.sql" level="WARN" />
	<logger name="ch.qos.logback" level="INFO" />
	<logger name="druid.sql" level="INFO" />
	<logger name="com.alibaba" level="WARN" />

	<!-- root级别 WARN -->
	<root level="info">
		<appender-ref ref="CONSOLE" />
		<!-- 异步文件输出 -->
		<appender-ref ref="INFO_ASYNC" />
		<appender-ref ref="WARN_ASYNC" />
		<appender-ref ref="ERROR_ASYNC" />
	</root>

</configuration>